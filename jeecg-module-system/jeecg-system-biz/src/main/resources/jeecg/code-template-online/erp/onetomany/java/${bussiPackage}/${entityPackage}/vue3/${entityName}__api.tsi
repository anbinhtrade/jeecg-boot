import {defHttp} from '/@/utils/http/axios';
import { useMessage } from "/@/hooks/web/useMessage";

const { createConfirm } = useMessage();

enum Api {
  list = '/${entityPackage}/${entityName?uncap_first}/list',
  save='/${entityPackage}/${entityName?uncap_first}/add',
  edit='/${entityPackage}/${entityName?uncap_first}/edit',
  deleteOne = '/${entityPackage}/${entityName?uncap_first}/delete',
  deleteBatch = '/${entityPackage}/${entityName?uncap_first}/deleteBatch',
  importExcel = '/${entityPackage}/${entityName?uncap_first}/importExcel',
  exportXls = '/${entityPackage}/${entityName?uncap_first}/exportXls',
<#list subTables as sub><#rt/>
  ${sub.entityName?uncap_first}List = '/${entityPackage}/${entityName?uncap_first}/list${sub.entityName}ByMainId',
  ${sub.entityName?uncap_first}Save='/${entityPackage}/${entityName?uncap_first}/add${sub.entityName}',
  ${sub.entityName?uncap_first}Edit='/${entityPackage}/${entityName?uncap_first}/edit${sub.entityName}',
  ${sub.entityName?uncap_first}Delete = '/${entityPackage}/${entityName?uncap_first}/delete${sub.entityName}',
  ${sub.entityName?uncap_first}DeleteBatch = '/${entityPackage}/${entityName?uncap_first}/deleteBatch${sub.entityName}',
</#list>
}
/**
 * Export API
 * @param params
 */
export const getExportUrl = Api.exportXls;

/**
 * Import APIs
 */
export const getImportUrl = Api.importExcel;
/**
 * List interface
 * @param params
 */
export const list = (params) =>
  defHttp.get({url: Api.list, params});

/**
 * Delete a single
 */
export const deleteOne = (params,handleSuccess) => {
  return defHttp.delete({url: Api.deleteOne, params}, {joinParamsToUrl: true}).then(() => {
    handleSuccess();
  });
}
/**
 * Delete in bulk
 * @param params
 */
export const batchDelete = (params, handleSuccess) => {
  createConfirm({
    iconType: 'warning',
    title: 'Confirm deleting',
    content: 'Are you sure want to delete the selected data',
    okText: 'Confirm',
    cancelText: 'Cancel',
    onOk: () => {
      return defHttp.delete({url: Api.deleteBatch, data: params}, {joinParamsToUrl: true}).then(() => {
        handleSuccess();
      });
    }
  });
}
/**
 * Save or update
 * @param params
 */
export const saveOrUpdate = (params, isUpdate) => {
  let url = isUpdate ? Api.edit : Api.save;
  return defHttp.post({url: url, params});
}
<#list subTables as sub><#rt/>
  <#assign myForeignKeys=''>
  <#list sub.foreignKeys as key>
    <#assign myForeignKeys='${key?uncap_first}'>
  </#list>
/**
 * List interface
 * @param params
 */
export const ${sub.entityName?uncap_first}List = (params) => {
  if(params['${myForeignKeys}']){
    return defHttp.get({url: Api.${sub.entityName?uncap_first}List, params});
  }
  return Promise.resolve({});
}


/**
 * Delete a single
 */
export const ${sub.entityName?uncap_first}Delete = (params,handleSuccess) => {
  return defHttp.delete({url: Api.${sub.entityName?uncap_first}Delete, params}, {joinParamsToUrl: true}).then(() => {
    handleSuccess();
  });
}
/**
 * Delete in bulk
 * @param params
 */
export const ${sub.entityName?uncap_first}DeleteBatch = (params, handleSuccess) => {
  createConfirm({
    iconType: 'warning',
    title: 'Confirm deleting',
    content: 'Are you sure want to delete the selected data',
    okText: 'Confirm',
    cancelText: 'Cancel',
    onOk: () => {
      return defHttp.delete({url: Api.${sub.entityName?uncap_first}DeleteBatch, data: params}, {joinParamsToUrl: true}).then(() => {
        handleSuccess();
      });
    }
  });
}
/**
 * Save or update
 * @param params
 */
export const  ${sub.entityName?uncap_first}SaveOrUpdate = (params, isUpdate) => {
  let url = isUpdate ? Api.${sub.entityName?uncap_first}Edit : Api.${sub.entityName?uncap_first}Save;
  return defHttp.post({url: url, params});
}
/**
 * 导入
 */
export const ${sub.entityName?uncap_first}ImportUrl = '/${entityPackage}/${entityName?uncap_first}/import${sub.entityName}'

/**
 * 导出
 */
export const ${sub.entityName?uncap_first}ExportXlsUrl = '/${entityPackage}/${entityName?uncap_first}/export${sub.entityName}'
</#list>